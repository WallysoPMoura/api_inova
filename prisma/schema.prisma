// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int @id @default(autoincrement())
  name     String
  email    String
  password String
  role     Role   @default(USER)

  passwordReset PasswordReset[]
  idea Idea[]

  @@map("users")
}

model PasswordReset {
  id        Int    @id @default(autoincrement())
  userId    Int
  token     String
  expiresAt DateTime
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
  deletedAt DateTime?

  user User @relation(fields: [userId], references: [id])

  @@map("password_resets")
}

model TypeOfIdea {
  id   Int    @id @default(autoincrement())
  name String

  idea Idea[]

  @@map("type_of_ideas")
}

model Department {
  id   Int    @id @default(autoincrement())
  name String

  idea Idea[]

  @@map("departments")
}

model Campaign {
  id   Int    @id @default(autoincrement())
  name String
  slug String
  description String @db.Text
  startDate DateTime
  endDate DateTime

  idea Idea[]

  @@map("campaigns")
}

model Idea {
  id          Int    @id @default(autoincrement())
  userId      Int
  campaignId  Int
  departmentId  Int
  typeOfIdeaId  Int
  idea        String @db.Text
  implemented Boolean? @default(false)
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @default(now())
  deletedAt   DateTime?

  user User @relation(fields: [userId], references: [id])
  campaign Campaign @relation(fields: [campaignId], references: [id])

  typeOfIdea TypeOfIdea @relation(fields: [typeOfIdeaId], references: [id])
  department Department @relation(fields: [departmentId], references: [id])

  @@map("ideas")
}

enum Role {
  USER
  ADMIN
}
